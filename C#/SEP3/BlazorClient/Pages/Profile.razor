@page "/Profile"
@using Align = BlazorStrap.Align
@using global::Shared
@inject NavigationManager navMgr;
@inject IReceiptService receiptService
@using BlazorClient.Services.ClientInterfaces
@if (receipts == null)
            {
                <span>Loading..</span>
            }
else
{
    <BSContainer >
        <BSCard>
            <BSCard CardType="CardType.Image" src="/img/bg-profile.jpg" Class="img-fluid"/>
            <BSCard CardType="CardType.ImageOverlay">
                <BSRow Align="Align.Start">

                    <BSCol Column="4" Style="color: #1a1e21">
                        <BSCard CardType="CardType.Card">
                            <BSCard CardType="CardType.Image" src="/img/profile.jpg" alt="Card image cap" width="150" height="400"/>
                            <BSCard CardType="CardType.Body">
                                <BSCard CardType="CardType.Title">User name</BSCard>
                                <BSCard CardType="CardType.Text">some things about users idk</BSCard>
                                <BSCard CardType="CardType.Text">some things about users idksfsaffffffffsdfs</BSCard>
                            </BSCard>
                        </BSCard>
                    </BSCol>
                    <BSCol Column="8">
                        <BSTable Color="BSColor.Dark" IsBordered="true" IsBorderLess="true" IsCaptionTop="true" IsStriped="true">
                            <caption class="fw-bolder" style="color: #8898aa">
                                <h3>Purchase History</h3></caption>
                            <BSTHead>
                                <BSTR>
                                    <BSTD>#Order</BSTD>
                                    <BSTD>Number of Products</BSTD>
                                    <BSTD>Date</BSTD>
                                    <BSTD>Total</BSTD>
                                </BSTR>
                            </BSTHead>
                            <BSTBody>
                                @foreach (Receipt receipt in receipts)
                                {
                                    <BSTR AlignRow="AlignRow.Middle">
                                        <BSTD>@receipt.id</BSTD>
                                        <BSTD>@receipt.order.items.Count</BSTD>
                                        <BSTD>@receipt.order.orderDate</BSTD>
                                        <BSTD>@receipt.finalPrice</BSTD>
                                    </BSTR>
                                }
                            </BSTBody>
                            <BSTFoot>
                                <BSTR>
                                    <BSTD ColSpan="4">Record of past purchases</BSTD>
                                </BSTR>

                            </BSTFoot>
                        </BSTable>
                        <BSButton Class="oi oi-account-logout" Color="BSColor.Dark" @onclick="@(() => navMgr.NavigateTo("/Logout"))"> Log Out
                        </BSButton>

                    </BSCol>

                </BSRow>
            </BSCard>
        </BSCard>
    </BSContainer>
}
@code {
    
    private IEnumerable<Receipt>? receipts;
    private string msg = "";
    private long? id= null;

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            receipts = await receiptService.GetAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
}