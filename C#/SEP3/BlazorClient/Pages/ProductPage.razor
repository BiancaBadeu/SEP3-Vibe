@page "/ProductPage/{id:long}"
@using global::Shared.DTOs
@using BlazorClient.Services.ClientInterfaces
@using global::Shared
@using System.Security.Claims
@inject IProductService productService
@inject IOrderItemService orderItemService
@inject IUserService userService
@inject NavigationManager navMgr

@if (currentProduct == null)
{
           <label>Loading Post data..</label>
}else
{
    <AuthorizeView >
        <Authorized>
            <div class="container" Style="color: #1a1e21">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title">@currentProduct.name </h3>
                        <h6 class="card-subtitle">@currentProduct.categoryName</h6>
                        <div class="row">
                            <div class="col-lg-5 col-md-5 col-sm-6">
                                <div class="white-box text-center"><img alt="here's a picture" src=@currentProduct.image class="img-responsive"></div>
                            </div>
                            <div class="col-lg-7 col-md-7 col-sm-6">
                                <h4 class="box-title mt-5">Product Description</h4>
                                <p>@currentProduct.description</p>
                                <h2 class="mt-5">
                                    @currentProduct.price $
                                </h2>
                                @if (currentUser.username.Equals("admin"))
                                {
                                    <p>This piece of text is only visible, if you are admin</p>
                                
                                    <button class="btn btn-dark btn-rounded mr-1" data-toggle="tooltip" title="" data-original-title="Edit product"
                                            @onclick="@(() => navMgr.NavigateTo($"/EditProductPage/{id}"))">
                                        Edit product</button>
                                
                                    <button class="btn btn-dark btn-rounded mr-1" data-toggle="tooltip" title="" data-original-title="Remove product"
                                            @onclick="RemoveProduct">
                                        Remove product</button>
                                
                                    <button class="btn btn-dark btn-rounded mr-1" data-toggle="tooltip" title="" data-original-title="Order product"
                                            @onclick="@(() => navMgr.NavigateTo($"/OrderProduct/{id}"))">
                                        Order product</button>
                                }
                                else
                                {
                                    <button class="btn btn-dark btn-rounded mr-1" data-toggle="tooltip" title="" data-original-title="Add to cart"
                                            @onclick="AddToCart">
                                        Add to cart</button>
                                }
                                
                            </div>
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <h3 class="box-title mt-5">Details:</h3>
                                <div class="table-responsive">
                                    <table class="table table-striped table-product">
                                        <tbody>
                                            
                                        <tr>
                                            <td>Name:</td>
                                                
                                            <td>@currentProduct.name</td>
                                                
                                        </tr>
                                        <tr>
                                            <td>Category:</td>
                                            <td>@currentProduct.categoryName</td>
                                        </tr>
                                        
                                        <tr>
                                            <td>Description:</td>
                                            <td>@currentProduct.description</td>
                                        </tr>
                                        <tr>
                                            <td>Production:</td>
                                            <td>@currentProduct.ingredients</td>
                                        </tr>
                                        
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </Authorized>
        <NotAuthorized>
                    <div class="container" Style="color: #1a1e21">
                                    <div class="card">
                                        <div class="card-body">
                                            <h3 class="card-title">@currentProduct.name </h3>
                                            <h6 class="card-subtitle">@currentProduct.categoryName</h6>
                                            <div class="row">
                                                <div class="col-lg-5 col-md-5 col-sm-6">
                                                    <div class="white-box text-center"><img alt="here's a picture" src=@currentProduct.image class="img-responsive"></div>
                                                </div>
                                                <div class="col-lg-7 col-md-7 col-sm-6">
                                                    <h4 class="box-title mt-5">Product Description</h4>
                                                    <p>@currentProduct.description</p>
                                                    <h2 class="mt-5">
                                                        @currentProduct.price $
                                                    </h2>
        
                                                    <h4>To order a product you must be logged in</h4>
                                                    <button class="btn btn-dark btn-rounded mr-1" data-toggle="tooltip" title="" data-original-title="Log in"
                                                     @onclick="@login">
                                                      Log in</button>
                                                </div>
                                                <div class="col-lg-12 col-md-12 col-sm-12">
                                                    <h3 class="box-title mt-5">Details:</h3>
                                                    <div class="table-responsive">
                                                        <table class="table table-striped table-product">
                                                            <tbody>
                                                                
                                                                <tr>
                                                                    <td>Name:</td>
                                                                    
                                                                    <td>@currentProduct.name</td>
                                                                    
                                                                </tr>
                                                                <tr>
                                                                    <td>Category:</td>
                                                                    <td>@currentProduct.categoryName</td>
                                                                </tr>
                                                            
                                                                <tr>
                                                                    <td>Description:</td>
                                                                    <td>@currentProduct.description</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Production:</td>
                                                                    <td>@currentProduct.ingredients</td>
                                                                </tr>
                                                            
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                </NotAuthorized>
    </AuthorizeView>
}
@code {
    [Parameter]
    public long id { get; set; }
    
    
    private string msg = "";
    private ProductCreationDto currentProduct;
    private OrderItemUpdateDto dto = null!;
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string? currentUsername;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;
    private User currentUser;
    
    protected override async Task OnInitializedAsync()
    {      
        msg = "";
        try
        {
            currentProduct= await productService.GetByIdAsync(id);
                    
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;
        
        if (!isLoggedIn) return;
        
        userClaims = user.Claims;
        currentUsername = user.Identity!.Name!;

        currentUser = await userService.GetByUsername(currentUsername);
    }

    private async void AddToCart()
    {
        try
        {
            ShoppingCart.orderItems = await orderItemService.GetNotBoughtOrderItems();
            bool alreadyInShoppingCart = false;
            List<OrderItem> orderItems = new List<OrderItem>();
            if(ShoppingCart.orderItems != null)
                orderItems = ShoppingCart.orderItems.ToList();
            for (int i = 0; i < orderItems.Count && alreadyInShoppingCart == false; i++)
            {
                if (orderItems[i].product.id == id)
                {
                    OrderItemCreationDto creationDto = await orderItemService.GetByIdAsync(orderItems[i].id);
                    if (creationDto.quantity < orderItems[i].product.stock)
                    {
                        dto = new(orderItems[i].id)
                        {
                            quantity = (creationDto.quantity + 1),
                            id = orderItems[i].id
                        };
                        await orderItemService.UpdateAsync(dto);
                    }
                    alreadyInShoppingCart = true;
                }
            }
            if (alreadyInShoppingCart == false)
                {
                    OrderItemCreationDto dto = new OrderItemCreationDto(id, 1);
                    await orderItemService.OrderProduct(dto);
                }
                navMgr.NavigateTo("/ShoppingCart");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }


    private async void RemoveProduct()
    {
        try
        {
            await productService.DeleteAsync(id);
            List<OrderItem> orderItems = await orderItemService.GetAll();
            for (int i = 0; i < orderItems.Count; i++)
            {
                if(orderItems[i].product.id == id)
                    await orderItemService.DeleteAsync(orderItems[i].id);
            }
            if (ShoppingCart.orderItems != null)
            {
                var list1 = new List<OrderItem>(ShoppingCart.orderItems!);
                list1.RemoveAll(orderItem => orderItem.id == id);
                ShoppingCart.orderItems = list1.AsEnumerable();
            }

            navMgr.NavigateTo("/ViewProducts");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    private void login()
    {
        navMgr.NavigateTo("/login");
    }
}