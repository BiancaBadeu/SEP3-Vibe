@page "/SearchPage/{toSearch}"
@using BlazorClient.Services.ClientInterfaces
@using global::Shared
@using global::Shared.DTOs
@inject IProductService productService
@inject NavigationManager navMgr
<div class="d-flex justify-content-center mb-5"><h1>Search results: </h1></div>


@if (!string.IsNullOrEmpty(msg))
{
    <div>
        <span>@msg</span>
    </div>
}

@if (products == null)
{
    <span>Loading..</span>
}
else if (!products.Any())
{
    <span>No results</span>
}
else
{
    
    
    <div class="container px-4 " style="color: black">
        <div class="row justify-content-center g-5">
        @foreach (var product in products)
        {
            @if (product.stock > 0)
            {
                <div class="card col-sm-3" @onclick="@(() => navMgr.NavigateTo($"/ProductPage/{product.id}"))">
                    <img class="card-img-top d-flex mx-auto" style="height: 200px; width: 200px; "  src=@product.image alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title"><label>@product.name</label></h5>
                        <p class="card-text text-truncate"><label>@product.description</label></p>
                    </div>
                </div>
            }

        }
        </div>
    </div>
}

@code {
    [Parameter]
    public string toSearch { get; set; }
    
    private IEnumerable<ProductDto>? products;

    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            products = await productService.GetSearchAsync(toSearch);

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}